// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: protos/video.proto

package video

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_video_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_protos_video_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_protos_video_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type VideoUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*VideoUploadRequest_Info
	//	*VideoUploadRequest_Buffer
	Data isVideoUploadRequest_Data `protobuf_oneof:"data"`
}

func (x *VideoUploadRequest) Reset() {
	*x = VideoUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_video_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoUploadRequest) ProtoMessage() {}

func (x *VideoUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_video_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoUploadRequest.ProtoReflect.Descriptor instead.
func (*VideoUploadRequest) Descriptor() ([]byte, []int) {
	return file_protos_video_proto_rawDescGZIP(), []int{1}
}

func (m *VideoUploadRequest) GetData() isVideoUploadRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *VideoUploadRequest) GetInfo() *VideoInfo {
	if x, ok := x.GetData().(*VideoUploadRequest_Info); ok {
		return x.Info
	}
	return nil
}

func (x *VideoUploadRequest) GetBuffer() []byte {
	if x, ok := x.GetData().(*VideoUploadRequest_Buffer); ok {
		return x.Buffer
	}
	return nil
}

type isVideoUploadRequest_Data interface {
	isVideoUploadRequest_Data()
}

type VideoUploadRequest_Info struct {
	Info *VideoInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type VideoUploadRequest_Buffer struct {
	Buffer []byte `protobuf:"bytes,2,opt,name=buffer,proto3,oneof"`
}

func (*VideoUploadRequest_Info) isVideoUploadRequest_Data() {}

func (*VideoUploadRequest_Buffer) isVideoUploadRequest_Data() {}

type VideoUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Size uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *VideoUploadResponse) Reset() {
	*x = VideoUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_video_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoUploadResponse) ProtoMessage() {}

func (x *VideoUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_video_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoUploadResponse.ProtoReflect.Descriptor instead.
func (*VideoUploadResponse) Descriptor() ([]byte, []int) {
	return file_protos_video_proto_rawDescGZIP(), []int{2}
}

func (x *VideoUploadResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VideoUploadResponse) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type VideoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Originalname string `protobuf:"bytes,1,opt,name=originalname,proto3" json:"originalname,omitempty"`
	Encoding     string `protobuf:"bytes,2,opt,name=encoding,proto3" json:"encoding,omitempty"`
	Mimetype     string `protobuf:"bytes,3,opt,name=mimetype,proto3" json:"mimetype,omitempty"`
	Size         string `protobuf:"bytes,4,opt,name=size,proto3" json:"size,omitempty"`
	Creator      string `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	Title        string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Description  string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *VideoInfo) Reset() {
	*x = VideoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_video_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoInfo) ProtoMessage() {}

func (x *VideoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_video_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoInfo.ProtoReflect.Descriptor instead.
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return file_protos_video_proto_rawDescGZIP(), []int{3}
}

func (x *VideoInfo) GetOriginalname() string {
	if x != nil {
		return x.Originalname
	}
	return ""
}

func (x *VideoInfo) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

func (x *VideoInfo) GetMimetype() string {
	if x != nil {
		return x.Mimetype
	}
	return ""
}

func (x *VideoInfo) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *VideoInfo) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *VideoInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type VideoUploaded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId     string `protobuf:"bytes,1,opt,name=videoId,proto3" json:"videoId,omitempty"`
	VideoLink   string `protobuf:"bytes,2,opt,name=videoLink,proto3" json:"videoLink,omitempty"`
	Creator     string `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	Title       string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   string `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *VideoUploaded) Reset() {
	*x = VideoUploaded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_video_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoUploaded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoUploaded) ProtoMessage() {}

func (x *VideoUploaded) ProtoReflect() protoreflect.Message {
	mi := &file_protos_video_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoUploaded.ProtoReflect.Descriptor instead.
func (*VideoUploaded) Descriptor() ([]byte, []int) {
	return file_protos_video_proto_rawDescGZIP(), []int{4}
}

func (x *VideoUploaded) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *VideoUploaded) GetVideoLink() string {
	if x != nil {
		return x.VideoLink
	}
	return ""
}

func (x *VideoUploaded) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *VideoUploaded) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoUploaded) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VideoUploaded) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *VideoUploaded) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_video_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_protos_video_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_protos_video_proto_rawDescGZIP(), []int{5}
}

type VideoUploadedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoUploaded *VideoUploaded `protobuf:"bytes,1,opt,name=videoUploaded,proto3" json:"videoUploaded,omitempty"`
}

func (x *VideoUploadedResponse) Reset() {
	*x = VideoUploadedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_video_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoUploadedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoUploadedResponse) ProtoMessage() {}

func (x *VideoUploadedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_video_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoUploadedResponse.ProtoReflect.Descriptor instead.
func (*VideoUploadedResponse) Descriptor() ([]byte, []int) {
	return file_protos_video_proto_rawDescGZIP(), []int{6}
}

func (x *VideoUploadedResponse) GetVideoUploaded() *VideoUploaded {
	if x != nil {
		return x.VideoUploaded
	}
	return nil
}

type NumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number uint32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *NumberRequest) Reset() {
	*x = NumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_video_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberRequest) ProtoMessage() {}

func (x *NumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_video_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberRequest.ProtoReflect.Descriptor instead.
func (*NumberRequest) Descriptor() ([]byte, []int) {
	return file_protos_video_proto_rawDescGZIP(), []int{7}
}

func (x *NumberRequest) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type VideoCriteriaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *VideoCriteriaRequest) Reset() {
	*x = VideoCriteriaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_video_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCriteriaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCriteriaRequest) ProtoMessage() {}

func (x *VideoCriteriaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_video_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCriteriaRequest.ProtoReflect.Descriptor instead.
func (*VideoCriteriaRequest) Descriptor() ([]byte, []int) {
	return file_protos_video_proto_rawDescGZIP(), []int{8}
}

func (x *VideoCriteriaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_protos_video_proto protoreflect.FileDescriptor

var file_protos_video_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x22, 0x1d, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x5e, 0x0a, 0x12, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x39, 0x0a, 0x13, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd5, 0x01, 0x0a, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x07, 0x0a,
	0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x53, 0x0a, 0x15, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x52, 0x0d, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x22, 0x27, 0x0a, 0x0d, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x26, 0x0a, 0x14, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0x3b, 0x0a, 0x0b,
	0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x53,
	0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x0e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x32, 0xb6, 0x02, 0x0a, 0x0c, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x19, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x28, 0x01, 0x12, 0x3d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x12, 0x0c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x48, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x14, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x53, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x43, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x12, 0x1b, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x42, 0x1f, 0x5a, 0x1d, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_video_proto_rawDescOnce sync.Once
	file_protos_video_proto_rawDescData = file_protos_video_proto_rawDesc
)

func file_protos_video_proto_rawDescGZIP() []byte {
	file_protos_video_proto_rawDescOnce.Do(func() {
		file_protos_video_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_video_proto_rawDescData)
	})
	return file_protos_video_proto_rawDescData
}

var file_protos_video_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_protos_video_proto_goTypes = []interface{}{
	(*Message)(nil),               // 0: video.Message
	(*VideoUploadRequest)(nil),    // 1: video.VideoUploadRequest
	(*VideoUploadResponse)(nil),   // 2: video.VideoUploadResponse
	(*VideoInfo)(nil),             // 3: video.VideoInfo
	(*VideoUploaded)(nil),         // 4: video.VideoUploaded
	(*Empty)(nil),                 // 5: video.Empty
	(*VideoUploadedResponse)(nil), // 6: video.VideoUploadedResponse
	(*NumberRequest)(nil),         // 7: video.NumberRequest
	(*VideoCriteriaRequest)(nil),  // 8: video.VideoCriteriaRequest
}
var file_protos_video_proto_depIdxs = []int32{
	3, // 0: video.VideoUploadRequest.info:type_name -> video.VideoInfo
	4, // 1: video.VideoUploadedResponse.videoUploaded:type_name -> video.VideoUploaded
	0, // 2: video.ChatService.SayHello:input_type -> video.Message
	1, // 3: video.VideoService.UploadVideo:input_type -> video.VideoUploadRequest
	5, // 4: video.VideoService.GetAllVideo:input_type -> video.Empty
	7, // 5: video.VideoService.GetRandomVideo:input_type -> video.NumberRequest
	8, // 6: video.VideoService.GetVideoByCriteria:input_type -> video.VideoCriteriaRequest
	0, // 7: video.ChatService.SayHello:output_type -> video.Message
	2, // 8: video.VideoService.UploadVideo:output_type -> video.VideoUploadResponse
	6, // 9: video.VideoService.GetAllVideo:output_type -> video.VideoUploadedResponse
	6, // 10: video.VideoService.GetRandomVideo:output_type -> video.VideoUploadedResponse
	6, // 11: video.VideoService.GetVideoByCriteria:output_type -> video.VideoUploadedResponse
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_protos_video_proto_init() }
func file_protos_video_proto_init() {
	if File_protos_video_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_video_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_video_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_video_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_video_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_video_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoUploaded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_video_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_video_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoUploadedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_video_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_video_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCriteriaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_video_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*VideoUploadRequest_Info)(nil),
		(*VideoUploadRequest_Buffer)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_video_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_protos_video_proto_goTypes,
		DependencyIndexes: file_protos_video_proto_depIdxs,
		MessageInfos:      file_protos_video_proto_msgTypes,
	}.Build()
	File_protos_video_proto = out.File
	file_protos_video_proto_rawDesc = nil
	file_protos_video_proto_goTypes = nil
	file_protos_video_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	SayHello(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
}

type chatServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChatServiceClient(cc grpc.ClientConnInterface) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) SayHello(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/video.ChatService/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	SayHello(context.Context, *Message) (*Message, error)
}

// UnimplementedChatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatServiceServer struct {
}

func (*UnimplementedChatServiceServer) SayHello(context.Context, *Message) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/video.ChatService/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SayHello(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "video.ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _ChatService_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/video.proto",
}

// VideoServiceClient is the client API for VideoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VideoServiceClient interface {
	UploadVideo(ctx context.Context, opts ...grpc.CallOption) (VideoService_UploadVideoClient, error)
	GetAllVideo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (VideoService_GetAllVideoClient, error)
	GetRandomVideo(ctx context.Context, in *NumberRequest, opts ...grpc.CallOption) (VideoService_GetRandomVideoClient, error)
	GetVideoByCriteria(ctx context.Context, in *VideoCriteriaRequest, opts ...grpc.CallOption) (VideoService_GetVideoByCriteriaClient, error)
}

type videoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVideoServiceClient(cc grpc.ClientConnInterface) VideoServiceClient {
	return &videoServiceClient{cc}
}

func (c *videoServiceClient) UploadVideo(ctx context.Context, opts ...grpc.CallOption) (VideoService_UploadVideoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VideoService_serviceDesc.Streams[0], "/video.VideoService/UploadVideo", opts...)
	if err != nil {
		return nil, err
	}
	x := &videoServiceUploadVideoClient{stream}
	return x, nil
}

type VideoService_UploadVideoClient interface {
	Send(*VideoUploadRequest) error
	CloseAndRecv() (*VideoUploadResponse, error)
	grpc.ClientStream
}

type videoServiceUploadVideoClient struct {
	grpc.ClientStream
}

func (x *videoServiceUploadVideoClient) Send(m *VideoUploadRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *videoServiceUploadVideoClient) CloseAndRecv() (*VideoUploadResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(VideoUploadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *videoServiceClient) GetAllVideo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (VideoService_GetAllVideoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VideoService_serviceDesc.Streams[1], "/video.VideoService/GetAllVideo", opts...)
	if err != nil {
		return nil, err
	}
	x := &videoServiceGetAllVideoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VideoService_GetAllVideoClient interface {
	Recv() (*VideoUploadedResponse, error)
	grpc.ClientStream
}

type videoServiceGetAllVideoClient struct {
	grpc.ClientStream
}

func (x *videoServiceGetAllVideoClient) Recv() (*VideoUploadedResponse, error) {
	m := new(VideoUploadedResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *videoServiceClient) GetRandomVideo(ctx context.Context, in *NumberRequest, opts ...grpc.CallOption) (VideoService_GetRandomVideoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VideoService_serviceDesc.Streams[2], "/video.VideoService/GetRandomVideo", opts...)
	if err != nil {
		return nil, err
	}
	x := &videoServiceGetRandomVideoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VideoService_GetRandomVideoClient interface {
	Recv() (*VideoUploadedResponse, error)
	grpc.ClientStream
}

type videoServiceGetRandomVideoClient struct {
	grpc.ClientStream
}

func (x *videoServiceGetRandomVideoClient) Recv() (*VideoUploadedResponse, error) {
	m := new(VideoUploadedResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *videoServiceClient) GetVideoByCriteria(ctx context.Context, in *VideoCriteriaRequest, opts ...grpc.CallOption) (VideoService_GetVideoByCriteriaClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VideoService_serviceDesc.Streams[3], "/video.VideoService/GetVideoByCriteria", opts...)
	if err != nil {
		return nil, err
	}
	x := &videoServiceGetVideoByCriteriaClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VideoService_GetVideoByCriteriaClient interface {
	Recv() (*VideoUploadedResponse, error)
	grpc.ClientStream
}

type videoServiceGetVideoByCriteriaClient struct {
	grpc.ClientStream
}

func (x *videoServiceGetVideoByCriteriaClient) Recv() (*VideoUploadedResponse, error) {
	m := new(VideoUploadedResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// VideoServiceServer is the server API for VideoService service.
type VideoServiceServer interface {
	UploadVideo(VideoService_UploadVideoServer) error
	GetAllVideo(*Empty, VideoService_GetAllVideoServer) error
	GetRandomVideo(*NumberRequest, VideoService_GetRandomVideoServer) error
	GetVideoByCriteria(*VideoCriteriaRequest, VideoService_GetVideoByCriteriaServer) error
}

// UnimplementedVideoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVideoServiceServer struct {
}

func (*UnimplementedVideoServiceServer) UploadVideo(VideoService_UploadVideoServer) error {
	return status.Errorf(codes.Unimplemented, "method UploadVideo not implemented")
}
func (*UnimplementedVideoServiceServer) GetAllVideo(*Empty, VideoService_GetAllVideoServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAllVideo not implemented")
}
func (*UnimplementedVideoServiceServer) GetRandomVideo(*NumberRequest, VideoService_GetRandomVideoServer) error {
	return status.Errorf(codes.Unimplemented, "method GetRandomVideo not implemented")
}
func (*UnimplementedVideoServiceServer) GetVideoByCriteria(*VideoCriteriaRequest, VideoService_GetVideoByCriteriaServer) error {
	return status.Errorf(codes.Unimplemented, "method GetVideoByCriteria not implemented")
}

func RegisterVideoServiceServer(s *grpc.Server, srv VideoServiceServer) {
	s.RegisterService(&_VideoService_serviceDesc, srv)
}

func _VideoService_UploadVideo_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(VideoServiceServer).UploadVideo(&videoServiceUploadVideoServer{stream})
}

type VideoService_UploadVideoServer interface {
	SendAndClose(*VideoUploadResponse) error
	Recv() (*VideoUploadRequest, error)
	grpc.ServerStream
}

type videoServiceUploadVideoServer struct {
	grpc.ServerStream
}

func (x *videoServiceUploadVideoServer) SendAndClose(m *VideoUploadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *videoServiceUploadVideoServer) Recv() (*VideoUploadRequest, error) {
	m := new(VideoUploadRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _VideoService_GetAllVideo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VideoServiceServer).GetAllVideo(m, &videoServiceGetAllVideoServer{stream})
}

type VideoService_GetAllVideoServer interface {
	Send(*VideoUploadedResponse) error
	grpc.ServerStream
}

type videoServiceGetAllVideoServer struct {
	grpc.ServerStream
}

func (x *videoServiceGetAllVideoServer) Send(m *VideoUploadedResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _VideoService_GetRandomVideo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NumberRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VideoServiceServer).GetRandomVideo(m, &videoServiceGetRandomVideoServer{stream})
}

type VideoService_GetRandomVideoServer interface {
	Send(*VideoUploadedResponse) error
	grpc.ServerStream
}

type videoServiceGetRandomVideoServer struct {
	grpc.ServerStream
}

func (x *videoServiceGetRandomVideoServer) Send(m *VideoUploadedResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _VideoService_GetVideoByCriteria_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(VideoCriteriaRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VideoServiceServer).GetVideoByCriteria(m, &videoServiceGetVideoByCriteriaServer{stream})
}

type VideoService_GetVideoByCriteriaServer interface {
	Send(*VideoUploadedResponse) error
	grpc.ServerStream
}

type videoServiceGetVideoByCriteriaServer struct {
	grpc.ServerStream
}

func (x *videoServiceGetVideoByCriteriaServer) Send(m *VideoUploadedResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _VideoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "video.VideoService",
	HandlerType: (*VideoServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "UploadVideo",
			Handler:       _VideoService_UploadVideo_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetAllVideo",
			Handler:       _VideoService_GetAllVideo_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetRandomVideo",
			Handler:       _VideoService_GetRandomVideo_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetVideoByCriteria",
			Handler:       _VideoService_GetVideoByCriteria_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protos/video.proto",
}
